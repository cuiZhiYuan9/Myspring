<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd">
        <dubbo:protocol name="dubbo" port="20080" threads="200"/>
        <!--定义了提供方应用信息，用于计算依赖关系；在 dubbo-admin 或 dubbo-monitor 会显示这个名字，方便辨识 -->
        <dubbo:application name="dubboCustomer" owner="programmer" organization="dubbox" />
        <!--向 zookeeper 订阅 provider 的地址，由 zookeeper 定时推送 -->
        <dubbo:registry address="zookeeper://localhost:2181" check="false"/>
        <!-- 用dubbo协议在20880端口暴露服务 -->
        <dubbo:protocol name="dubbo" port="20880" />

        <!-- (配置订单服务提供者 )提供支付方的接口 -->
   <!--     <dubbo:service ref="orderReadService" protocol="dubbo" interface="com.cui.dubboAPI.MessageDeal"></dubbo:service>
        <bean id="orderReadService" class="com.order.impl.OrderReadServiceImpl"></bean>-->

        <!-- 配置消费者 -->
        <!--使用 dubbo 协议调用定义好的 api.PermissionService 接口 -->
        <dubbo:reference id="MessageDealimpl" interface="com.cui.dubboAPI.MessageDeal" check="false">
                <dubbo:method name="service" async="false" return="true" />
        </dubbo:reference>
</beans>